
#include <stdio.h>
#include <string.h>
#include <stdlib.h>

#include "omp.h"
#include "types.h"
#include "WELL512.h"
#include "RankTable.h"


float aaf[54][46] = {

{  81.000,  82.000, 110.000, 103.000,  84.000,  85.000, 100.000, 104.000,  99.000, 107.000,  98.000, 102.000,  79.000, 112.000,  88.000,  96.000,  86.000,  80.000,  97.000,  89.000, 106.000, 109.000,  85.000,  87.000,  86.000,  98.000, 105.000,  85.000,  93.000,  87.000, 109.000,  88.000,  86.000, 109.000,  96.000, 104.000, 105.000,  80.000,  80.000,  86.000, 104.000, 108.000,  97.000,  76.000,  88.000,  82.000},
{  83.000,  82.000, 116.000, 108.000,  94.000,  89.000, 108.000, 111.000, 108.000, 117.000, 105.000, 104.000,  79.000, 113.000,  90.000, 103.000,  89.000,  83.000, 107.000,  99.000, 107.000, 112.000,  92.000,  91.000,  89.000, 105.000, 114.000,  88.000,  98.000,  94.000, 113.000,  95.000,  90.000, 111.000, 102.000, 115.000, 114.000,  86.000,  85.000,  87.000, 109.000, 111.000, 109.000,  81.000,  97.000,  87.000},
{  84.000,  88.000, 119.000, 116.000,  92.000,  94.000, 113.000, 118.000, 112.000, 117.000, 109.000, 114.000,  84.000, 113.000,  94.000, 106.000,  92.000,  89.000, 110.000,  98.000, 115.000, 113.000,  88.000,  94.000,  92.000, 110.000, 120.000,  92.000, 104.000, 100.000, 113.000,  96.000,  92.000, 119.000, 105.000, 116.000, 120.000,  90.000,  86.000,  94.000, 119.000, 117.000, 112.000,  84.000,  98.000,  86.000},
{  75.000,  78.000,  90.000,  85.000,  86.000,  79.000,  88.000,  86.000,  86.000,  89.000,  84.000,  81.000,  73.000,  88.000,  85.000,  92.000,  82.000,  74.000,  85.000,  82.000,  86.000,  87.000,  81.000,  83.000,  81.000,  86.000,  92.000,  80.000,  85.000,  86.000,  87.000,  82.000,  83.000,  88.000,  81.000,  91.000,  92.000,  76.000,  75.000,  82.000,  87.000,  87.000,  85.000,  77.000,  85.000,  80.000},
{  78.000,  84.000,  87.000,  83.000,  85.000,  83.000,  86.000,  84.000,  86.000,  87.000,  84.000,  81.000,  78.000,  86.000,  85.000,  83.000,  86.000,  74.000,  83.000,  81.000,  82.000,  84.000,  85.000,  83.000,  80.000,  85.000,  91.000,  88.000,  86.000,  88.000,  83.000,  82.000,  83.000,  84.000,  83.000,  90.000,  91.000,  78.000,  79.000,  79.000,  83.000,  85.000,  82.000,  75.000,  90.000,  82.000},
{  84.000,  86.000, 115.000, 114.000,  91.000,  90.000, 110.000, 114.000, 110.000, 119.000, 106.000, 110.000,  84.000, 111.000,  90.000, 102.000,  92.000,  87.000, 110.000,  95.000, 113.000, 110.000,  88.000,  94.000,  92.000, 106.000, 117.000,  90.000, 102.000,  98.000, 113.000,  93.000,  93.000, 117.000, 107.000, 114.000, 117.000,  89.000,  85.000,  92.000, 113.000, 113.000, 117.000,  83.000,  98.000,  87.000},
{  82.000,  84.000, 117.000, 111.000,  92.000,  89.000, 109.000, 114.000, 109.000, 117.000, 106.000, 108.000,  81.000, 112.000,  90.000, 103.000,  89.000,  84.000, 108.000,  97.000, 111.000, 112.000,  88.000,  91.000,  89.000, 106.000, 115.000,  88.000,  99.000,  95.000, 113.000,  94.000,  90.000, 115.000, 103.000, 113.000, 115.000,  87.000,  84.000,  89.000, 114.000, 113.000, 111.000,  82.000,  97.000,  85.000},
{  78.000,  83.000, 109.000, 107.000,  86.000,  88.000, 106.000, 108.000, 109.000, 109.000, 105.000, 105.000,  79.000, 105.000,  87.000,  98.000,  87.000,  85.000, 106.000,  96.000, 103.000, 104.000,  85.000,  89.000,  85.000, 103.000, 113.000,  89.000,  98.000,  94.000, 104.000,  91.000,  85.000, 107.000, 103.000, 111.000, 113.000,  83.000,  81.000,  87.000, 107.000, 107.000, 106.000,  77.000,  93.000,  81.000},
{  81.000,  81.000, 111.000, 109.000,  87.000,  85.000, 107.000, 110.000, 108.000, 115.000, 102.000, 105.000,  79.000, 108.000,  87.000,  98.000,  87.000,  82.000, 108.000,  93.000, 107.000, 107.000,  84.000,  89.000,  87.000, 104.000, 111.000,  87.000,  96.000,  92.000, 109.000,  89.000,  88.000, 111.000, 103.000, 109.000, 112.000,  83.000,  80.000,  86.000, 106.000, 108.000, 113.000,  77.000,  92.000,  84.000},
{  85.000,  91.000,  94.000,  91.000,  93.000,  89.000,  92.000,  91.000,  91.000,  94.000,  89.000,  88.000,  88.000,  94.000,  92.000,  92.000,  94.000,  80.000,  91.000,  83.000,  91.000,  93.000,  90.000,  90.000,  90.000,  91.000,  98.000,  92.000,  95.000,  96.000,  91.000,  87.000,  94.000,  94.000,  88.000,  95.000,  98.000,  85.000,  86.000,  90.000,  92.000,  93.000,  90.000,  87.000,  96.000,  88.000},
{  84.000,  85.000, 101.000,  95.000,  91.000,  91.000,  98.000,  98.000, 100.000, 101.000,  97.000,  95.000,  82.000,  98.000,  94.000,  97.000,  89.000,  82.000,  97.000,  92.000,  93.000,  97.000,  89.000,  94.000,  83.000,  96.000, 105.000,  87.000,  97.000,  93.000,  95.000,  96.000,  89.000,  97.000,  94.000, 103.000, 105.000,  85.000,  84.000,  89.000,  98.000,  98.000,  95.000,  82.000,  97.000,  84.000},
{  85.000,  84.000,  95.000,  92.000,  89.000,  89.000,  93.000,  93.000,  94.000,  97.000,  91.000,  90.000,  84.000,  92.000,  89.000,  93.000,  87.000,  78.000,  93.000,  87.000,  89.000,  91.000,  85.000,  92.000,  83.000,  92.000, 101.000,  87.000,  95.000,  93.000,  90.000,  94.000,  88.000,  93.000,  91.000,  98.000, 101.000,  84.000,  83.000,  89.000,  94.000,  93.000,  93.000,  81.000,  95.000,  83.000},
{  79.000,  81.000, 114.000, 109.000,  87.000,  86.000, 108.000, 112.000, 107.000, 114.000, 103.000, 106.000,  76.000, 109.000,  88.000,  99.000,  86.000,  82.000, 106.000,  91.000, 111.000, 109.000,  83.000,  88.000,  86.000, 102.000, 111.000,  85.000,  95.000,  92.000, 110.000,  88.000,  86.000, 112.000, 100.000, 109.000, 111.000,  84.000,  80.000,  88.000, 108.000, 110.000, 109.000,  76.000,  92.000,  82.000},
{  77.000,  83.000,  92.000,  84.000,  87.000,  87.000,  92.000,  88.000,  89.000,  90.000,  87.000,  85.000,  78.000,  88.000,  91.000,  97.000,  87.000,  76.000,  86.000,  83.000,  88.000,  88.000,  83.000,  90.000,  84.000,  88.000,  94.000,  88.000,  84.000,  92.000,  86.000,  82.000,  84.000,  88.000,  82.000,  92.000,  94.000,  82.000,  82.000,  81.000,  86.000,  88.000,  84.000,  73.000,  89.000,  82.000},
{  82.000,  84.000, 115.000, 108.000,  92.000,  91.000, 111.000, 112.000, 116.000, 115.000, 110.000, 107.000,  80.000, 113.000,  92.000, 104.000,  90.000,  85.000, 113.000,  99.000, 105.000, 111.000,  91.000,  92.000,  88.000, 107.000, 116.000,  90.000,  99.000,  94.000, 109.000,  94.000,  90.000, 109.000, 106.000, 116.000, 116.000,  86.000,  85.000,  88.000, 107.000, 111.000, 108.000,  80.000,  97.000,  86.000},
{  83.000,  86.000,  99.000,  96.000,  93.000,  90.000,  96.000,  96.000,  98.000, 100.000,  95.000,  92.000,  84.000,  96.000,  90.000,  96.000,  94.000,  85.000,  96.000,  91.000,  92.000,  95.000,  92.000,  94.000,  89.000,  93.000, 103.000,  93.000,  98.000,  97.000,  96.000,  90.000,  91.000,  96.000,  94.000, 103.000, 103.000,  84.000,  86.000,  87.000,  94.000,  96.000,  97.000,  81.000,  96.000,  89.000},
{  83.000,  86.000,  90.000,  84.000,  90.000,  88.000,  87.000,  86.000,  87.000,  89.000,  85.000,  83.000,  84.000,  88.000,  88.000,  87.000,  92.000,  75.000,  85.000,  79.000,  85.000,  87.000,  86.000,  90.000,  84.000,  86.000,  92.000,  89.000,  88.000,  91.000,  86.000,  82.000,  89.000,  88.000,  83.000,  90.000,  92.000,  79.000,  83.000,  83.000,  85.000,  88.000,  84.000,  79.000,  91.000,  85.000},
{  78.000,  82.000,  90.000,  84.000,  86.000,  84.000,  89.000,  86.000,  86.000,  88.000,  84.000,  82.000,  77.000,  88.000,  88.000,  92.000,  85.000,  74.000,  84.000,  83.000,  86.000,  87.000,  82.000,  85.000,  85.000,  88.000,  92.000,  88.000,  83.000,  91.000,  86.000,  81.000,  83.000,  87.000,  80.000,  91.000,  92.000,  78.000,  80.000,  80.000,  85.000,  88.000,  83.000,  73.000,  86.000,  82.000},
{  80.000,  86.000,  91.000,  90.000,  86.000,  88.000,  89.000,  90.000,  91.000,  91.000,  88.000,  88.000,  84.000,  89.000,  84.000,  89.000,  89.000,  79.000,  88.000,  82.000,  86.000,  88.000,  83.000,  87.000,  81.000,  88.000,  96.000,  86.000,  93.000,  90.000,  87.000,  88.000,  83.000,  90.000,  86.000,  93.000,  96.000,  82.000,  80.000,  85.000,  92.000,  90.000,  89.000,  81.000,  91.000,  78.000},
{  77.000,  75.000,  80.000,  77.000,  82.000,  78.000,  78.000,  76.000,  77.000,  80.000,  76.000,  73.000,  74.000,  78.000,  77.000,  80.000,  81.000,  68.000,  76.000,  78.000,  77.000,  77.000,  78.000,  82.000,  78.000,  80.000,  82.000,  82.000,  81.000,  80.000,  79.000,  77.000,  74.000,  79.000,  76.000,  82.000,  82.000,  70.000,  76.000,  75.000,  79.000,  77.000,  78.000,  68.000,  81.000,  75.000},
{  83.000,  87.000,  88.000,  85.000,  88.000,  86.000,  84.000,  85.000,  86.000,  88.000,  84.000,  83.000,  87.000,  88.000,  86.000,  85.000,  94.000,  79.000,  84.000,  79.000,  84.000,  86.000,  89.000,  91.000,  86.000,  84.000,  90.000,  91.000,  90.000,  89.000,  87.000,  82.000,  89.000,  88.000,  86.000,  89.000,  90.000,  77.000,  83.000,  81.000,  84.000,  86.000,  85.000,  80.000,  90.000,  86.000},
{  81.000,  85.000, 110.000, 108.000,  89.000,  89.000, 112.000, 109.000, 110.000, 112.000, 106.000, 105.000,  80.000, 107.000,  90.000, 101.000,  89.000,  85.000, 109.000,  93.000, 106.000, 106.000,  85.000,  91.000,  89.000, 106.000, 115.000,  88.000,  99.000,  96.000, 105.000,  91.000,  89.000, 108.000, 104.000, 112.000, 116.000,  88.000,  83.000,  92.000, 107.000, 108.000, 109.000,  80.000,  96.000,  84.000},
{  81.000,  82.000, 117.000, 111.000,  91.000,  90.000, 109.000, 114.000, 109.000, 115.000, 106.000, 108.000,  78.000, 112.000,  90.000, 102.000,  88.000,  85.000, 108.000,  96.000, 109.000, 113.000,  89.000,  90.000,  88.000, 105.000, 115.000,  88.000, 100.000,  95.000, 112.000,  93.000,  89.000, 113.000, 101.000, 114.000, 115.000,  86.000,  84.000,  88.000, 111.000, 113.000, 108.000,  80.000,  95.000,  84.000},
{  84.000,  87.000, 115.000, 115.000,  89.000,  91.000, 109.000, 114.000, 108.000, 115.000, 105.000, 112.000,  84.000, 113.000,  91.000, 102.000,  91.000,  87.000, 107.000,  94.000, 115.000, 111.000,  86.000,  92.000,  92.000, 107.000, 116.000,  90.000, 102.000,  97.000, 113.000,  93.000,  91.000, 119.000, 104.000, 112.000, 116.000,  87.000,  84.000,  93.000, 117.000, 115.000, 112.000,  83.000,  95.000,  85.000},
{  86.000,  90.000, 120.000, 116.000,  96.000,  96.000, 116.000, 118.000, 116.000, 122.000, 112.000, 114.000,  86.000, 118.000,  96.000, 108.000,  94.000,  90.000, 114.000, 102.000, 112.000, 116.000,  94.000,  96.000,  94.000, 112.000, 124.000,  94.000, 106.000, 102.000, 114.000, 100.000,  96.000, 116.000, 110.000, 122.000, 124.000,  94.000,  90.000,  96.000, 116.000, 118.000, 114.000,  88.000, 104.000,  90.000},
{  82.000,  84.000,  90.000,  86.000,  88.000,  86.000,  86.000,  86.000,  87.000,  89.000,  85.000,  84.000,  83.000,  90.000,  88.000,  90.000,  90.000,  77.000,  86.000,  81.000,  85.000,  89.000,  88.000,  90.000,  88.000,  86.000,  92.000,  89.000,  89.000,  90.000,  88.000,  83.000,  89.000,  89.000,  84.000,  91.000,  92.000,  78.000,  83.000,  81.000,  86.000,  88.000,  85.000,  80.000,  89.000,  85.000},
{  82.000,  83.000, 114.000, 113.000,  85.000,  87.000, 105.000, 112.000, 105.000, 112.000, 102.000, 110.000,  80.000, 115.000,  88.000,  98.000,  87.000,  83.000, 104.000,  90.000, 114.000, 112.000,  83.000,  87.000,  89.000, 103.000, 110.000,  86.000,  97.000,  91.000, 114.000,  89.000,  87.000, 118.000, 100.000, 107.000, 110.000,  81.000,  80.000,  89.000, 114.000, 114.000, 108.000,  79.000,  89.000,  82.000},
{  82.000,  89.000, 112.000, 112.000,  89.000,  91.000, 107.000, 110.000, 107.000, 112.000, 104.000, 111.000,  85.000, 116.000,  90.000, 101.000,  91.000,  86.000, 104.000,  96.000, 110.000, 111.000,  88.000,  90.000,  90.000, 107.000, 115.000,  90.000, 101.000,  94.000, 110.000,  95.000,  89.000, 114.000, 104.000, 112.000, 115.000,  86.000,  85.000,  92.000, 117.000, 114.000, 105.000,  85.000,  97.000,  83.000},
{  84.000,  84.000,  92.000,  87.000,  87.000,  87.000,  88.000,  88.000,  89.000,  91.000,  87.000,  84.000,  82.000,  90.000,  85.000,  89.000,  90.000,  78.000,  87.000,  85.000,  86.000,  89.000,  85.000,  88.000,  84.000,  88.000,  94.000,  90.000,  88.000,  92.000,  89.000,  81.000,  85.000,  90.000,  86.000,  93.000,  94.000,  78.000,  82.000,  80.000,  87.000,  89.000,  87.000,  77.000,  88.000,  83.000},
{  78.000,  73.000,  93.000,  89.000,  82.000,  78.000,  89.000,  90.000,  90.000,  94.000,  88.000,  85.000,  73.000,  92.000,  80.000,  91.000,  80.000,  75.000,  90.000,  86.000,  87.000,  90.000,  81.000,  83.000,  81.000,  88.000,  95.000,  78.000,  86.000,  86.000,  91.000,  84.000,  81.000,  91.000,  87.000,  95.000,  95.000,  75.000,  77.000,  79.000,  89.000,  90.000,  90.000,  73.000,  84.000,  79.000},
{  82.000,  85.000,  94.000,  93.000,  85.000,  85.000,  92.000,  93.000,  93.000,  96.000,  92.000,  90.000,  85.000,  92.000,  84.000,  92.000,  90.000,  83.000,  92.000,  84.000,  91.000,  91.000,  82.000,  90.000,  88.000,  91.000, 100.000,  89.000,  93.000,  94.000,  91.000,  83.000,  87.000,  95.000,  93.000,  96.000, 100.000,  81.000,  83.000,  86.000,  93.000,  93.000,  94.000,  82.000,  91.000,  82.000},
{  79.000,  81.000,  95.000,  90.000,  88.000,  86.000,  92.000,  91.000,  92.000,  94.000,  89.000,  88.000,  78.000,  96.000,  88.000,  95.000,  84.000,  77.000,  90.000,  87.000,  89.000,  93.000,  86.000,  85.000,  86.000,  91.000,  97.000,  85.000,  88.000,  88.000,  92.000,  88.000,  84.000,  92.000,  86.000,  97.000,  97.000,  79.000,  81.000,  82.000,  92.000,  93.000,  88.000,  79.000,  88.000,  81.000},
{  70.000,  71.000,  84.000,  85.000,  74.000,  73.000,  82.000,  82.000,  84.000,  85.000,  80.000,  80.000,  68.000,  85.000,  74.000,  82.000,  74.000,  73.000,  83.000,  79.000,  80.000,  83.000,  74.000,  75.000,  74.000,  81.000,  87.000,  76.000,  82.000,  77.000,  83.000,  77.000,  72.000,  83.000,  82.000,  87.000,  87.000,  68.000,  70.000,  74.000,  83.000,  83.000,  83.000,  67.000,  77.000,  68.000},
{  82.000,  84.000, 102.000,  97.000,  93.000,  92.000,  99.000,  99.000,  99.000, 101.000,  97.000,  95.000,  83.000,  98.000,  92.000, 104.000,  88.000,  82.000,  97.000,  96.000,  95.000,  98.000,  87.000,  92.000,  88.000,  99.000, 106.000,  90.000,  97.000,  94.000,  97.000,  96.000,  86.000,  99.000,  92.000, 104.000, 106.000,  85.000,  85.000,  88.000, 102.000,  99.000,  97.000,  82.000,  94.000,  82.000},
{  83.000,  84.000, 114.000, 107.000,  93.000,  90.000, 109.000, 110.000, 111.000, 116.000, 108.000, 104.000,  81.000, 111.000,  90.000, 103.000,  89.000,  83.000, 110.000,  98.000, 106.000, 110.000,  90.000,  91.000,  89.000, 106.000, 116.000,  88.000,  99.000,  95.000, 110.000,  95.000,  91.000, 110.000, 105.000, 115.000, 116.000,  88.000,  85.000,  89.000, 108.000, 110.000, 110.000,  83.000,  99.000,  86.000},
{  84.000,  85.000, 115.000, 112.000,  90.000,  90.000, 109.000, 113.000, 110.000, 116.000, 105.000, 109.000,  82.000, 113.000,  91.000, 102.000,  90.000,  85.000, 109.000,  95.000, 111.000, 111.000,  88.000,  91.000,  91.000, 107.000, 115.000,  89.000, 100.000,  95.000, 112.000,  93.000,  91.000, 115.000, 104.000, 113.000, 115.000,  86.000,  84.000,  91.000, 112.000, 113.000, 111.000,  82.000,  95.000,  86.000},
{  82.000,  86.000,  96.000,  92.000,  93.000,  87.000,  94.000,  93.000,  93.000,  96.000,  92.000,  88.000,  82.000,  92.000,  90.000,  92.000,  93.000,  81.000,  92.000,  85.000,  91.000,  92.000,  90.000,  91.000,  90.000,  92.000, 100.000,  91.000,  93.000,  98.000,  92.000,  86.000,  92.000,  94.000,  88.000,  98.000, 100.000,  86.000,  86.000,  86.000,  92.000,  93.000,  93.000,  82.000,  96.000,  89.000},
{  77.000,  84.000,  91.000,  86.000,  88.000,  81.000,  88.000,  88.000,  90.000,  92.000,  87.000,  84.000,  81.000,  88.000,  86.000,  86.000,  88.000,  75.000,  89.000,  84.000,  84.000,  88.000,  86.000,  85.000,  81.000,  87.000,  95.000,  89.000,  87.000,  90.000,  86.000,  82.000,  90.000,  88.000,  88.000,  93.000,  95.000,  82.000,  81.000,  79.000,  86.000,  88.000,  87.000,  81.000,  93.000,  85.000},
{  81.000,  82.000, 115.000, 108.000,  87.000,  87.000, 107.000, 111.000, 106.000, 112.000, 103.000, 106.000,  77.000, 115.000,  91.000, 101.000,  85.000,  81.000, 104.000,  95.000, 110.000, 112.000,  85.000,  86.000,  86.000, 104.000, 111.000,  87.000,  95.000,  90.000, 111.000,  91.000,  86.000, 112.000,  99.000, 110.000, 111.000,  82.000,  80.000,  87.000, 109.000, 112.000, 103.000,  77.000,  90.000,  83.000},
{  79.000,  83.000,  91.000,  86.000,  88.000,  85.000,  88.000,  89.000,  89.000,  89.000,  86.000,  84.000,  79.000,  89.000,  87.000,  87.000,  88.000,  76.000,  87.000,  82.000,  85.000,  89.000,  85.000,  86.000,  82.000,  87.000,  92.000,  89.000,  89.000,  88.000,  87.000,  83.000,  84.000,  88.000,  83.000,  91.000,  92.000,  77.000,  80.000,  81.000,  86.000,  88.000,  85.000,  77.000,  89.000,  82.000},
{  70.000,  80.000,  82.000,  78.000,  78.000,  75.000,  80.000,  79.000,  81.000,  82.000,  79.000,  77.000,  78.000,  80.000,  77.000,  83.000,  81.000,  72.000,  78.000,  77.000,  79.000,  79.000,  75.000,  80.000,  76.000,  80.000,  86.000,  83.000,  80.000,  83.000,  78.000,  75.000,  78.000,  81.000,  80.000,  83.000,  86.000,  71.000,  74.000,  75.000,  81.000,  81.000,  78.000,  71.000,  83.000,  75.000},
{  82.000,  88.000,  92.000,  90.000,  93.000,  88.000,  90.000,  89.000,  91.000,  93.000,  89.000,  86.000,  86.000,  88.000,  86.000,  89.000,  97.000,  84.000,  89.000,  84.000,  88.000,  88.000,  90.000,  95.000,  89.000,  88.000,  96.000,  95.000,  93.000,  96.000,  90.000,  83.000,  89.000,  91.000,  90.000,  95.000,  96.000,  82.000,  86.000,  83.000,  88.000,  89.000,  92.000,  79.000,  95.000,  87.000},
{  84.000,  86.000, 115.000, 114.000,  90.000,  90.000, 109.000, 114.000, 108.000, 117.000, 105.000, 110.000,  84.000, 109.000,  90.000, 102.000,  92.000,  87.000, 108.000,  94.000, 115.000, 109.000,  86.000,  94.000,  92.000, 106.000, 116.000,  90.000, 102.000,  98.000, 113.000,  92.000,  92.000, 119.000, 105.000, 112.000, 116.000,  88.000,  84.000,  92.000, 115.000, 113.000, 116.000,  82.000,  96.000,  86.000},
{  82.000,  86.000, 114.000, 112.000,  91.000,  92.000, 113.000, 114.000, 118.000, 114.000, 113.000, 110.000,  82.000, 110.000,  92.000, 104.000,  90.000,  88.000, 116.000,  97.000, 108.000, 109.000,  88.000,  92.000,  90.000, 108.000, 119.000,  90.000, 102.000,  98.000, 108.000,  95.000,  91.000, 112.000, 108.000, 116.000, 119.000,  89.000,  85.000,  92.000, 112.000, 112.000, 113.000,  83.000,  98.000,  85.000},
{  80.000,  81.000, 116.000, 109.000,  86.000,  86.000, 104.000, 112.000, 104.000, 110.000, 102.000, 107.000,  77.000, 114.000,  88.000,  99.000,  84.000,  80.000, 102.000,  92.000, 111.000, 113.000,  83.000,  84.000,  86.000, 103.000, 108.000,  84.000,  94.000,  88.000, 113.000,  90.000,  84.000, 115.000,  96.000, 106.000, 108.000,  79.000,  79.000,  86.000, 114.000, 113.000, 102.000,  78.000,  88.000,  80.000},
{  86.000,  89.000,  93.000,  90.000,  93.000,  91.000,  91.000,  90.000,  91.000,  93.000,  88.000,  88.000,  85.000,  94.000,  91.000,  89.000,  92.000,  79.000,  90.000,  82.000,  88.000,  92.000,  92.000,  90.000,  89.000,  90.000,  97.000,  91.000,  93.000,  95.000,  90.000,  88.000,  92.000,  91.000,  86.000,  96.000,  97.000,  84.000,  88.000,  88.000,  90.000,  92.000,  88.000,  85.000,  96.000,  89.000},
{  82.000,  88.000, 113.000, 110.000,  92.000,  93.000, 113.000, 112.000, 119.000, 115.000, 115.000, 109.000,  84.000, 111.000,  92.000, 104.000,  92.000,  89.000, 116.000,  99.000, 105.000, 109.000,  91.000,  94.000,  90.000, 108.000, 120.000,  92.000, 103.000,  98.000, 107.000,  96.000,  92.000, 109.000, 111.000, 118.000, 120.000,  90.000,  87.000,  92.000, 109.000, 111.000, 112.000,  84.000, 101.000,  86.000},
{  86.000,  95.000,  98.000,  96.000,  98.000,  90.000,  97.000,  96.000,  98.000, 101.000,  94.000,  93.000,  90.000,  98.000,  93.000,  93.000,  96.000,  82.000,  97.000,  90.000,  93.000,  95.000,  95.000,  93.000,  91.000,  96.000, 104.000,  95.000,  96.000, 100.000,  94.000,  94.000,  97.000,  96.000,  96.000, 102.000, 104.000,  91.000,  90.000,  91.000,  97.000,  97.000,  96.000,  91.000, 106.000,  95.000},
{  76.000,  78.000,  88.000,  85.000,  84.000,  78.000,  86.000,  85.000,  85.000,  89.000,  84.000,  81.000,  77.000,  84.000,  82.000,  85.000,  83.000,  73.000,  85.000,  83.000,  84.000,  84.000,  80.000,  84.000,  82.000,  87.000,  92.000,  85.000,  83.000,  88.000,  85.000,  82.000,  82.000,  87.000,  84.000,  90.000,  92.000,  78.000,  78.000,  76.000,  86.000,  85.000,  87.000,  73.000,  87.000,  82.000},
{  82.000,  85.000, 113.000, 112.000,  89.000,  91.000, 110.000, 112.000, 110.000, 115.000, 105.000, 110.000,  80.000, 115.000,  90.000, 100.000,  88.000,  84.000, 108.000,  94.000, 108.000, 111.000,  87.000,  89.000,  89.000, 106.000, 116.000,  88.000,  99.000,  95.000, 109.000,  93.000,  89.000, 111.000, 104.000, 114.000, 116.000,  87.000,  84.000,  92.000, 111.000, 113.000, 108.000,  82.000,  97.000,  84.000},
{  76.000,  79.000,  88.000,  87.000,  82.000,  79.000,  85.000,  85.000,  85.000,  88.000,  83.000,  82.000,  78.000,  88.000,  80.000,  88.000,  82.000,  74.000,  84.000,  82.000,  84.000,  86.000,  80.000,  81.000,  84.000,  87.000,  92.000,  84.000,  87.000,  85.000,  87.000,  84.000,  81.000,  88.000,  83.000,  91.000,  92.000,  74.000,  76.000,  80.000,  88.000,  88.000,  86.000,  74.000,  83.000,  78.000},
{  82.000,  84.000,  90.000,  87.000,  87.000,  84.000,  87.000,  86.000,  87.000,  90.000,  85.000,  84.000,  82.000,  90.000,  87.000,  89.000,  89.000,  77.000,  86.000,  82.000,  87.000,  88.000,  87.000,  90.000,  85.000,  87.000,  92.000,  85.000,  90.000,  87.000,  89.000,  87.000,  87.000,  90.000,  86.000,  91.000,  92.000,  78.000,  80.000,  83.000,  88.000,  88.000,  87.000,  78.000,  89.000,  84.000},
{  79.000,  81.000,  88.000,  83.000,  88.000,  81.000,  85.000,  84.000,  87.000,  89.000,  84.000,  80.000,  77.000,  88.000,  84.000,  82.000,  87.000,  74.000,  86.000,  80.000,  81.000,  86.000,  89.000,  85.000,  81.000,  83.000,  90.000,  86.000,  86.000,  88.000,  85.000,  81.000,  86.000,  84.000,  84.000,  91.000,  90.000,  78.000,  82.000,  78.000,  81.000,  85.000,  83.000,  77.000,  92.000,  84.000},
{  78.000,  83.000, 107.000, 109.000,  83.000,  87.000, 103.000, 106.000, 103.000, 107.000,  99.000, 107.000,  79.000, 111.000,  85.000,  95.000,  86.000,  83.000, 100.000,  89.000, 106.000, 106.000,  83.000,  86.000,  86.000, 102.000, 109.000,  86.000,  97.000,  90.000, 106.000,  90.000,  83.000, 109.000,  99.000, 107.000, 109.000,  80.000,  80.000,  89.000, 109.000, 109.000, 102.000,  77.000,  90.000,  79.000},
    };

#define STATE_SIZE 16
static unsigned int s_aulDefaultState[] = {
    0x2ef76080, 0x1bf121c5, 0xb222a768, 0x6c5d388b, 
    0xab99166e, 0x326c9f12, 0x3354197a, 0x7036b9a5, 
    0xb08c9e58, 0x3362d8d3, 0x037e5e95, 0x47a1ff2f, 
    0x740ebb34, 0xbf27ef0d, 0x70055204, 0xd24daa9a,
};


int main(int iArgC, char *apArgV[]) {
    /*
    s_fPairTime = 0;
    s_fRankTime = 0;
    s_fRank1Time = 0;
    s_fRank2Time = 0;
    */
    int iResult = -1;

    uint  iF = 12;
    uint  iM = 11;
    float fMax = 1.0;
    uint iSeed = 1000;
    bool bVerbose = false;
    bool bPermute = false;
    int iIters = 1;
    float fCutOff = 0;

    for (int i = 0; i < iArgC; i++) {
        if ((strcmp(apArgV[i], "-f") == 0) && (i < iArgC-1)){
            iF = atoi(apArgV[i+1]);
        } else if ((strcmp(apArgV[i], "-m") == 0) && (i < iArgC-1)){
            iM = atoi(apArgV[i+1]);
        } else if ((strcmp(apArgV[i], "-r") == 0) && (i < iArgC-1)){
            fMax = atoi(apArgV[i+1]);
        } else if ((strcmp(apArgV[i], "-s") == 0) && (i < iArgC-1)){
            iSeed = atoi(apArgV[i+1]);
        } else if ((strcmp(apArgV[i], "-i") == 0) && (i < iArgC-1)){
            iIters = atoi(apArgV[i+1]);
        } else if ((strcmp(apArgV[i], "-c") == 0) && (i < iArgC-1)){
            fCutOff = atof(apArgV[i+1]);
        } else if (strcmp(apArgV[i], "-p") == 0) {
            bPermute = true;
        } else if (strcmp(apArgV[i], "-v") == 0) {
            bVerbose = true;
        }
    }
    printf("F: %u, M: %u, fmax: %f, cut: %f, seed: %u, iters: %u, perm:%s, verb:%s\n", iF, iM, fMax, fCutOff, iSeed, iIters, bPermute?"true":"false", bVerbose?"true":"false");

    srandom(1);
    float **ppTable = new float *[iF];
    for (uint i = 0; i < iF; ++i) {
        ppTable[i] = new float[iM];
        for (uint j = 0; j < iM; ++j) {
            ppTable[i][j] = aaf[i][j];// (int)((fMax*rand())/(1.0+RAND_MAX));
        }
    }

    srandom(iSeed);
    float fStart = omp_get_wtime();
    float fCreate = 0;
    float fPair   = 0;

    uint iMaxNumPairs = 0;
    uint iMinNumPairs = 0xffffff;
    float fAverageNumPairs = 0;
    float fTotalRank = 0;

    WELL512 **apWELL =new WELL512*[omp_get_max_threads()];
#pragma omp parallel 
    {
        int iT = omp_get_thread_num();
        unsigned int temp[STATE_SIZE]; 
        for (unsigned int j = 0; j < STATE_SIZE; j++) {
            temp[j] = s_aulDefaultState[(iT+13*j)%16];
        }
        apWELL[iT]     = new WELL512(temp);
    }


    for (int z = 0; z < iIters; z++) {

        float fCreate0 = omp_get_wtime();
        RankTable *pRT = RankTable::createInstance(iF, iM, apWELL,  ppTable);
        fCreate += (omp_get_wtime() - fCreate0);
        
        if (pRT != NULL) {
            pRT->setVerbosity(bVerbose);
            //            pRT->display();
            float fPair0 = omp_get_wtime();
            iResult = pRT->makeAllPairings(fCutOff, bPermute);
            fPair += (omp_get_wtime() - fPair0);
            //            pRT->display();
            if (bVerbose) printf("After pair: res = %d\n", iResult);
            if (iResult == 0) {
                const couples &vc = pRT->getPairs();
                if (bVerbose) {
                    printf("Got %zd pairs\n", vc.size());
                    for (uint i = 0; i < vc.size(); ++i) {
                        printf("  (%d,%d)\n", vc[i].first, vc[i].second);
                    }
                }

                if (vc.size() > iMaxNumPairs) {
                    iMaxNumPairs = vc.size();
                }
                if (vc.size() < iMinNumPairs) {
                    iMinNumPairs = vc.size();
                }
                fAverageNumPairs += vc.size();
                
                if ((vc.size() > iF) && (vc.size() > iM)) {
                    printf("have too many pairs: %zd\n", vc.size());
                }

                for (uint i = 0; i < vc.size(); ++i) {
                    fTotalRank += ppTable[vc[i].first][vc[i].second];
                }

            }
            /*            
            s_fPairTime += pRT->m_fPairTime;
            s_fRankTime += pRT->m_fRankTime;
            s_fRank1Time += pRT->m_fRank1Time;
            s_fRank2Time += pRT->m_fRank2Time;
            */
            delete pRT;
        } else {
            printf("Xouldn't create RankTable\n");
        }
    }
    for (uint i = 0; i < iF; i++) {
        delete[] ppTable[i];
    }
    delete[] ppTable;

#pragma omp parallel 
    {
        int iT = omp_get_thread_num();
        delete apWELL[iT] ;
    }
    delete apWELL;
 
    float fEnd  = omp_get_wtime();
    printf("Total  time: %f\n", fEnd - fStart);
    printf("Create time: %f\n", fCreate);
    printf("Pair   time: %f\n", fPair);
    /*
    printf("inner Pair   time: %f\n", s_fPairTime);
    printf("inner Rank   time: %f\n", s_fRankTime);
    printf("inner Rank1  time: %f\n", s_fRank1Time);
    printf("inner Rank2  time: %f\n", s_fRank2Time);
    */
    printf("Min pairs %u\n", iMinNumPairs);
    printf("Max pairs %u\n", iMaxNumPairs);
    printf("Avg pairs %f\n", fAverageNumPairs/iIters);
    printf("total rank %f\n", fTotalRank);
    return iResult;
    
}
